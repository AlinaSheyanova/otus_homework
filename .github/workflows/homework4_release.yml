name: Release homework4 workflow

on:
  push:
    branches:
      - 'homework/04'
      
env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      working-directory: ${{github.workspace}}/homework4/
      run: cmake -B ./build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DPATCH_NUMBER_CONSTANT=${{github.run_number}}

    - name: Build
      # Build your program with the given configuration
      working-directory: ${{github.workspace}}/homework4/
      run: cmake --build ./build --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/homework4/build/tests/
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ./ip_to_string_tests

    - name: Pack
      run: cmake --build ${{github.workspace}}/homework4/build --config ${{env.BUILD_TYPE}} --target package

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.MY_TOKEN }}
      with:
        tag_name: ${{ github.run_number }}
        release_name: Release ${{ github.run_number }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.MY_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./homework4/build/print_ip-1.0.${{ github.run_number }}-Linux.deb
        asset_name: print_ip-1.0.${{ github.run_number }}-Linux.deb
        asset_content_type: application/vnd.debian.binary-package

